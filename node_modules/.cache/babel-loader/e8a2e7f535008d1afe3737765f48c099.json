{"ast":null,"code":"var _jsxFileName = \"/home/ndcuong/Documents/react-konva/src/Content.js\",\n    _s = $RefreshSig$();\n\nimport { Stage, Layer, Circle, Line } from 'react-konva';\nimport Konva from 'konva';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst points = [{\n  x: 300,\n  y: 300\n}, {\n  x: 500,\n  y: 500\n}];\n\nfunction Content() {\n  _s();\n\n  const [color, setColor] = useState('red');\n\n  const handleDragStart = () => {\n    setColor(Konva.Util.getRandomColor());\n  };\n\n  const handleDragEnd = () => {\n    setColor(Konva.Util.getRandomColor());\n  };\n\n  const handleDragMove = () => {\n    setColor(Konva.Util.getRandomColor());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: [points.map((point, index) => /*#__PURE__*/_jsxDEV(Circle, {\n        x: point.x,\n        y: point.y,\n        draggable: true,\n        radius: 3,\n        fill: 'white',\n        stroke: 'black',\n        strokeWidth: 3,\n        onDragStart: handleDragStart // onDragEnd={handleDragEnd}\n        // onDragMove={handleDragMove}\n\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Line, {\n        points: [300, 300, 500, 500],\n        stroke: 'red',\n        strokeWidth: 15,\n        lineCap: 'round',\n        lineJoin: 'round'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Content, \"1tiAWa0qV2LzlfieA8kxeqGWLlU=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["Stage","Layer","Circle","Line","Konva","useState","points","x","y","Content","color","setColor","handleDragStart","Util","getRandomColor","handleDragEnd","handleDragMove","window","innerWidth","innerHeight","map","point","index"],"sources":["/home/ndcuong/Documents/react-konva/src/Content.js"],"sourcesContent":["import { Stage, Layer ,Circle ,Line } from 'react-konva'\nimport Konva from 'konva'\nimport { useState } from 'react';\n\n\nconst points = [\n  {\n    x: 300,\n    y: 300\n  },\n  {\n    x: 500,\n    y: 500\n  }\n]\n\n\nfunction Content() {\n  const [color, setColor] = useState('red')\n\n  const handleDragStart = () => {\n    setColor(Konva.Util.getRandomColor())\n  }\n\n  const handleDragEnd = () => {\n    setColor(Konva.Util.getRandomColor())\n  }\n\n  const handleDragMove = () => {\n    setColor(Konva.Util.getRandomColor())\n  }\n\n  return (\n    <Stage width={window.innerWidth} height={window.innerHeight}>\n      <Layer>\n        {points.map((point, index) => (\n          <Circle\n            key={index}\n            x={point.x}\n            y={point.y}\n            draggable\n            radius={3}\n            fill={'white'}\n            stroke={'black'}\n            strokeWidth={3}\n            onDragStart={handleDragStart}\n            // onDragEnd={handleDragEnd}\n            // onDragMove={handleDragMove}\n          />\n        ))}\n        <Line \n          points={[300, 300, 500, 500]}\n          stroke={'red'}\n          strokeWidth={15}\n          lineCap={'round'}\n          lineJoin={'round'}\n        />\n      </Layer>\n    </Stage>\n  ) \n}\n\nexport default Content"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,IAA/B,QAA2C,aAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,MAAM,GAAG,CACb;EACEC,CAAC,EAAE,GADL;EAEEC,CAAC,EAAE;AAFL,CADa,EAKb;EACED,CAAC,EAAE,GADL;EAEEC,CAAC,EAAE;AAFL,CALa,CAAf;;AAYA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;;EAEA,MAAMO,eAAe,GAAG,MAAM;IAC5BD,QAAQ,CAACP,KAAK,CAACS,IAAN,CAAWC,cAAX,EAAD,CAAR;EACD,CAFD;;EAIA,MAAMC,aAAa,GAAG,MAAM;IAC1BJ,QAAQ,CAACP,KAAK,CAACS,IAAN,CAAWC,cAAX,EAAD,CAAR;EACD,CAFD;;EAIA,MAAME,cAAc,GAAG,MAAM;IAC3BL,QAAQ,CAACP,KAAK,CAACS,IAAN,CAAWC,cAAX,EAAD,CAAR;EACD,CAFD;;EAIA,oBACE,QAAC,KAAD;IAAO,KAAK,EAAEG,MAAM,CAACC,UAArB;IAAiC,MAAM,EAAED,MAAM,CAACE,WAAhD;IAAA,uBACE,QAAC,KAAD;MAAA,WACGb,MAAM,CAACc,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV,QAAC,MAAD;QAEE,CAAC,EAAED,KAAK,CAACd,CAFX;QAGE,CAAC,EAAEc,KAAK,CAACb,CAHX;QAIE,SAAS,MAJX;QAKE,MAAM,EAAE,CALV;QAME,IAAI,EAAE,OANR;QAOE,MAAM,EAAE,OAPV;QAQE,WAAW,EAAE,CARf;QASE,WAAW,EAAEI,eATf,CAUE;QACA;;MAXF,GACOU,KADP;QAAA;QAAA;QAAA;MAAA,QADD,CADH,eAgBE,QAAC,IAAD;QACE,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADV;QAEE,MAAM,EAAE,KAFV;QAGE,WAAW,EAAE,EAHf;QAIE,OAAO,EAAE,OAJX;QAKE,QAAQ,EAAE;MALZ;QAAA;QAAA;QAAA;MAAA,QAhBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD;;GA3CQb,O;;KAAAA,O;AA6CT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}